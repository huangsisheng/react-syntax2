[{"D:\\study-proj\\react-syntax2\\src\\index.js":"1","D:\\study-proj\\react-syntax2\\src\\App.js":"2","D:\\study-proj\\react-syntax2\\src\\router\\index.js":"3","D:\\study-proj\\react-syntax2\\src\\router\\router.js":"4","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\b_CodeSplit\\index.js":"5","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\d_ErrorBorder\\index.js":"6","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\a_Accessbility\\index.js":"7","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\h_TeamWorks\\index.js":"8","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\k_Portals\\index.js":"9","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\g_HighComp\\index.js":"10","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\j_Performance\\index.js":"11","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\c_context\\index.js":"12","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\f_Fragment\\index.js":"13","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\l_Profiler\\index.js":"14","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\i_ThoroughJsx\\index.js":"15","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\e_Refs\\index.js":"16","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\m_RenderProps\\index.js":"17","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\n_NotContralCom\\index.js":"18","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\d_HookApi\\index.js":"19","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\a_Introduce\\index.js":"20","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\b_useStateHook\\index.js":"21","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\c_useEffectHook\\index.js":"22","D:\\study-proj\\react-syntax2\\src\\views\\redux\\a_TodoList\\index.js":"23","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\b_CodeSplit\\OtherComponent.js":"24","D:\\study-proj\\react-syntax2\\src\\utils\\captureError.js":"25","D:\\study-proj\\react-syntax2\\src\\views\\redux\\a_TodoList\\TodoListUI.js":"26","D:\\study-proj\\react-syntax2\\src\\store\\actionCreator.js":"27","D:\\study-proj\\react-syntax2\\src\\store\\index.js":"28","D:\\study-proj\\react-syntax2\\src\\store\\actionTypes.js":"29","D:\\study-proj\\react-syntax2\\src\\store\\reduce.js":"30","D:\\study-proj\\react-syntax2\\src\\store\\sagas.js":"31","D:\\study-proj\\react-syntax2\\src\\views\\reactRedux\\a_NewTodoList\\index.js":"32","D:\\study-proj\\react-syntax2\\src\\react-redux-store\\index.js":"33","D:\\study-proj\\react-syntax2\\src\\react-redux-store\\reducer.js":"34","D:\\study-proj\\react-syntax2\\src\\react-redux-store\\actionTypes.js":"35","D:\\study-proj\\react-syntax2\\src\\react-redux-store\\actionCreator.js":"36","D:\\study-proj\\react-syntax2\\src\\react-redux-store\\sagas.js":"37"},{"size":655,"mtime":1614752791738,"results":"38","hashOfConfig":"39"},{"size":553,"mtime":1614749388230,"results":"40","hashOfConfig":"39"},{"size":2862,"mtime":1612505426975,"results":"41","hashOfConfig":"39"},{"size":3600,"mtime":1614743130388,"results":"42","hashOfConfig":"39"},{"size":2365,"mtime":1612505426981,"results":"43","hashOfConfig":"39"},{"size":1850,"mtime":1612505426983,"results":"44","hashOfConfig":"39"},{"size":1715,"mtime":1611797364671,"results":"45","hashOfConfig":"39"},{"size":464,"mtime":1612505426986,"results":"46","hashOfConfig":"39"},{"size":578,"mtime":1612505426988,"results":"47","hashOfConfig":"39"},{"size":467,"mtime":1612505426985,"results":"48","hashOfConfig":"39"},{"size":572,"mtime":1612505426987,"results":"49","hashOfConfig":"39"},{"size":4992,"mtime":1612505426982,"results":"50","hashOfConfig":"39"},{"size":2075,"mtime":1612505426984,"results":"51","hashOfConfig":"39"},{"size":776,"mtime":1612505426989,"results":"52","hashOfConfig":"39"},{"size":2404,"mtime":1612505426987,"results":"53","hashOfConfig":"39"},{"size":5297,"mtime":1614588404019,"results":"54","hashOfConfig":"39"},{"size":2030,"mtime":1612676025581,"results":"55","hashOfConfig":"39"},{"size":2187,"mtime":1612505426991,"results":"56","hashOfConfig":"39"},{"size":3974,"mtime":1614673698686,"results":"57","hashOfConfig":"39"},{"size":3589,"mtime":1614590126762,"results":"58","hashOfConfig":"39"},{"size":1600,"mtime":1612767021968,"results":"59","hashOfConfig":"39"},{"size":1719,"mtime":1614589222270,"results":"60","hashOfConfig":"39"},{"size":2954,"mtime":1614742514939,"results":"61","hashOfConfig":"39"},{"size":376,"mtime":1611797364672,"results":"62","hashOfConfig":"39"},{"size":330,"mtime":1612505426979,"results":"63","hashOfConfig":"39"},{"size":1805,"mtime":1614734454589,"results":"64","hashOfConfig":"39"},{"size":1205,"mtime":1614742615001,"results":"65","hashOfConfig":"39"},{"size":1764,"mtime":1614738481591,"results":"66","hashOfConfig":"39"},{"size":489,"mtime":1614742599914,"results":"67","hashOfConfig":"39"},{"size":1357,"mtime":1614740715680,"results":"68","hashOfConfig":"39"},{"size":915,"mtime":1614742567161,"results":"69","hashOfConfig":"39"},{"size":2867,"mtime":1614755606341,"results":"70","hashOfConfig":"39"},{"size":956,"mtime":1614755127203,"results":"71","hashOfConfig":"39"},{"size":1146,"mtime":1614755560780,"results":"72","hashOfConfig":"39"},{"size":474,"mtime":1614751501257,"results":"73","hashOfConfig":"39"},{"size":642,"mtime":1614755285448,"results":"74","hashOfConfig":"39"},{"size":292,"mtime":1614755042653,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ei1ml2",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\study-proj\\react-syntax2\\src\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\App.js",["170"],"D:\\study-proj\\react-syntax2\\src\\router\\index.js",["171"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-27 13:16:16\r\n * @LastEditTime: 2021-02-04 22:26:27\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\router\\index.js\r\n */\r\nimport { Component } from \"react\";\r\n\r\nimport { Router, Route, NavLink } from \"react-router-dom\";\r\nimport { createHashHistory } from \"history\";\r\n\r\nimport { linkList, routes } from './router'\r\n\r\nfunction ModuleItems(props) {\r\n    function handleClick() {\r\n        props.toggle()\r\n    }\r\n    return (\r\n        <section>\r\n            <h4 className=\"module-title\" onClick={handleClick}>{props.item.title}<span className=\"arrow\"\r\n                style={props.item.isOpen ? { transform: `rotate(135deg)` } : { transform: `rotate(315deg)` }}></span></h4>\r\n            <ul className=\"moudule-wrap\" style={props.item.isOpen ? { height: 'auto' } : { height: '0px' }}>\r\n                {\r\n                    props.item.children.map(ele =>\r\n                        <li className=\"module-item\" key={ele.path}>\r\n                            {/* 激活 */}\r\n                            <NavLink activeClassName=\"activeRoute\" to={ele.path}>{ele.name}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\nexport default class RouterIndex extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: linkList\r\n        }\r\n        this.handleToggle = this.handleToggle.bind(this)\r\n    }\r\n    handleToggle(idx) {\r\n        this.setState((state, props) => (\r\n            {\r\n                list: state.list.map((item, index) => {\r\n                    if (index == idx) {\r\n                        item.isOpen = !item.isOpen\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        ))\r\n    }\r\n    render() {\r\n        return (\r\n            <Router history={createHashHistory()}>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"leftNav\">\r\n                        <h3 className=\"page-title\">react学习</h3>\r\n                        {\r\n                            this.state.list.map((item, index) =>\r\n                                <ModuleItems item={item} key={item.id} toggle={() => { this.handleToggle(index) }} />\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                    {/* 右边视图 */}\r\n                    <div className=\"rightMain\">\r\n                        {\r\n                            routes.map(item =>\r\n                                <Route key={item.pageName} path={'/' + item.pageName} exact component={item.component} />\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n",["172","173"],"D:\\study-proj\\react-syntax2\\src\\router\\router.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\b_CodeSplit\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\d_ErrorBorder\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\a_Accessbility\\index.js",["174"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-27 13:22:51\r\n * @LastEditTime: 2021-01-27 22:28:39\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\a_Accessbility\\index.js\r\n */\r\n\r\n/**\r\n * 无障碍: \r\n * 总结：\r\n * \r\n */\r\n\r\nimport { Component, Fragment } from \"react\";\r\n\r\n\r\n/* 1.语义化的html S */\r\n// 有时使用jsx会破坏html语义化，这种\r\n// function ListItem({ item }) {\r\n//     return (\r\n//         /* 短语法 */\r\n//         <>\r\n//             <dt>{item.term}</dt>\r\n//             <dd>{item.desc}</dd>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nfunction Glossary(props) {\r\n    /* 和其他的元素一样，你可以把一系列的对象映射到一个 fragment 的数组中 */\r\n    return (\r\n        <dl>\r\n            {\r\n                props.items.map(item => (\r\n                    <Fragment key={item.id}>\r\n                        <dt>{item.term}</dt>\r\n                        <dd>{item.desc}</dd>\r\n                    </Fragment>\r\n                ))\r\n            }\r\n        </dl>\r\n    )\r\n}\r\n/* 1.语义化的html E */\r\n\r\n// for 在react中是 htmlFor\r\n{/* <label htmlFor=\"namedInput\">Name:</label>\r\n<input id=\"namedInput\" type=\"text\" name=\"name\"/> */}\r\n\r\nexport default class Accessbility extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [\r\n                {\r\n                    id: 1,\r\n                    desc: 'aaa',\r\n                    term: 'a1'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Glossary items={this.state.items}></Glossary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\h_TeamWorks\\index.js",["175","176","177"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-01-31 21:38:28\r\n * @LastEditors: Please set LastEditors\r\n * @Description: Fragment\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nexport default class TeamWorks extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            123\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\k_Portals\\index.js",["178","179","180"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-02-02 20:47:06\r\n * @LastEditors: Please set LastEditors\r\n * @Description: Fragment\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n/* \r\n  Portal 提供了一种将子节点渲染到存在于父组件以外的 DOM 节点的优秀的方案。\r\n */\r\nexport default class IsPortals extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            123\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\g_HighComp\\index.js",["181","182","183"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-01-31 22:08:04\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 高阶组件\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nexport default class HighComp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            123\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\j_Performance\\index.js",["184","185","186"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-02-01 22:52:52\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 性能优化：https://zh-hans.reactjs.org/docs/optimizing-performance.html\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\n// 1.发布时，使用生产版本\r\n\r\nexport default class Performance extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            123\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\c_context\\index.js",["187","188","189","190","191"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-27 23:01:33\r\n * @LastEditTime: 2021-01-31 10:19:45\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\guideManage\\c_context\\index.js\r\n */\r\n\r\n/**\r\n * Context \r\n * 提供了一个无需为每层组件手动添加 props，就能在组件树间进行数据传递的方法。\r\n * 数据是通过 props 属性自上而下（由父及子）进行传递的\r\n */\r\nimport React, { Component } from 'react'\r\n\r\n// 1.何时使用react：\r\n/**\r\n * Context 设计目的是为了共享那些对于一个组件树而言是“全局”的数据，\r\n * 例如当前认证的用户、主题或首选语言。\r\n * Context 可以让我们无须明确地传遍每一个组件，就能将值深入传递进组件树。\r\n * 参考 vue 的provider/inject\r\n */\r\n// 为当前的 theme 创建一个 context（“light”为默认值）。\r\nconst ContextTheme = React.createContext('light')\r\n\r\nclass App extends Component {\r\n    constructor(props) { super(props) }\r\n    render() {\r\n        // 使用一个 Provider 来将当前的 theme 传递给以下的组件树。\r\n        // 无论多深，任何组件都能读取这个值。\r\n        // 在这个例子中，我们将 “dark” 作为当前的值传递下去。\r\n        // ContextTheme._currentValue：默认值\r\n        console.log(ContextTheme)\r\n        return (\r\n            <ContextTheme.Provider value=\"light\">\r\n                <Toolbar />\r\n            </ContextTheme.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n// 中间组件不必再往下传递\r\nfunction Toolbar() {\r\n    return (<div><ThemeButton /></div>)\r\n}\r\nclass ThemeButton extends Component {\r\n    static contextType = ContextTheme\r\n    render() {\r\n        console.log(this.context)\r\n        return (\r\n            <button theme={this.context}>主题是：{this.context}</button>\r\n        )\r\n    }\r\n}\r\n\r\n// b.使用Context之前的考虑：\r\n/**\r\n * Context主要用于很多不同层级的组件需要访问同样的数据，\r\n * 可能会使得组件的复用性变差，故需谨慎使用\r\n * \r\n * 如果你只是想避免层层传递一些属性，组件组合有时候是一个比 context 更好的解决方案。\r\n */\r\n\r\n// c.API使用：\r\nconst defaultValue = 'defaultValue'\r\nconst MyContext = React.createContext(defaultValue)\r\n/**\r\n * 创建一个 Context 对象。当 React 渲染一个订阅了这个 Context 对象的组件，\r\n * 这个组件会从组件树中离自身最近的那个匹配的 Provider 中读取到当前的 context 值。\r\n * \r\n * 只有当组件所处的树中没有匹配到 Provider 时，其 defaultValue 参数才会生效。\r\n * 这有助于在不使用 Provider 包装组件的情况下对组件进行测试。\r\n * 注意：将 undefined 传递给 Provider 的 value 时，消费组件的 defaultValue 不会生效。\r\n * \r\n */\r\n\r\n// (<MyContext.Provider value={'某个值'} ></MyContext.Provider>)\r\n\r\n/**\r\n * 每个 Context 对象都会返回一个 Provider React 组件，它允许消费组件订阅 context 的变化\r\n * \r\n * 当 Provider 的 value 值发生变化时，它内部的所有消费组件都会重新渲染。\r\n * Provider 及其内部 消费者(consumer) 组件都不受制于 shouldComponentUpdate 函数，\r\n * 因此当 消费者(consumer) 组件在其祖先组件退出更新的情况下也能更新。\r\n * \r\n * 通过新旧值检测来确定变化，使用了与 Object.is 相同的算法。\r\n */\r\n\r\n// class.contentType:\r\n\r\nclass MyClass extends Component {\r\n    static contextType = MyContext\r\n    componentDidMount() {\r\n        let value = this.context\r\n        /* 在组件挂载完成后，使用 MyContext 组件的值来执行一些有副作用的操作 */\r\n    }\r\n    componentDidUpdate() {\r\n        let value = this.context\r\n    }\r\n    componentWillUnmount() {\r\n        let value = this.context\r\n    }\r\n    render() {\r\n        let value = this.context;\r\n        return ({ value })\r\n        /* 基于 MyContext 组件的值进行渲染 */\r\n    }\r\n}\r\n// MyClass.contextType = MyContext\r\n/**\r\n * 挂载在 class 上的 contextType 属性会被重赋值为一个由 React.createContext()\r\n *  创建的 Context 对象。这能让你使用 this.context 来消费最近 Context 上的那个值。\r\n * 你可以在任何生命周期中访问到它，包括 render 函数中\r\n */\r\n\r\n// Context.Consumer\r\n<MyContext.Consumer>\r\n    {value => value}\r\n    {/* {value =>  基于 context 值进行渲染 } */}\r\n</MyContext.Consumer>\r\n\r\n// Context.displayName\r\nMyContext.displayName = 'MyDisplayName' //类型为字符串\r\n// < MyContext.Provider > // \"MyDisplayName.Provider\" 在 DevTools 中\r\n// <MyContext.Consumer> // \"MyDisplayName.Consumer\" 在 DevTools 中\r\n\r\n\r\n/* 动态 Context */\r\n\r\nexport default class Context extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <App />\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\f_Fragment\\index.js",["192","193"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-01-31 21:57:54\r\n * @LastEditors: Please set LastEditors\r\n * @Description: Fragment\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component } from \"react\";\r\n\r\n// 1.动机\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <table>\r\n                <tr>\r\n                    <Columns />\r\n                </tr>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nclass Columns extends Component {\r\n    render() {\r\n        return (\r\n            /* <React.Fragment>\r\n                <td>Hi</td>\r\n                <td>Sang</td>\r\n            </React.Fragment> */\r\n            <>\r\n                <td>Hi</td>\r\n                <td>Sang</td>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// key 是唯一可以传递给 Fragment 的属性。未来我们可能会添加对其他属性的支持，例如事件。\r\nclass Glossary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <dl>{\r\n                this.props.items.map(ele =>\r\n                    <React.Fragment key={ele.id}>\r\n                        <dt>{ele.name}</dt>\r\n                        <dd>{ele.desc}</dd>\r\n                    </React.Fragment>\r\n                )\r\n            }</dl>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default class FragmentCon extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [\r\n                {\r\n                    id: 'zs',\r\n                    name: '张三',\r\n                    desc: 'CTO'\r\n                },\r\n                {\r\n                    id: 'ls',\r\n                    name: '李四',\r\n                    desc: 'CFO'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table></Table>\r\n                <Glossary items={this.state.items}></Glossary>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\l_Profiler\\index.js",["194","195","196"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-02 21:04:59\r\n * @LastEditTime: 2021-02-02 21:07:20\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\guideManage\\l_Profiler\\index.js\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\n/* \r\n  Profiler 测量渲染一个 React 应用多久渲染一次以及渲染一次的“代价”。 它的目的是识别出应用中渲染较慢的部分，\r\n  或是可以使用类似 memoization 优化的部分，并从相关优化中获益。\r\n  在生产构建中会被禁用\r\n */\r\nexport default class IsProfiler extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            123\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\i_ThoroughJsx\\index.js",["197","198","199","200","201","202"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-02-01 22:36:01\r\n * @LastEditors: Please set LastEditors\r\n * @Description: Fragment\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n\r\nconsole.log(React)\r\n\r\n/* const Div = <div className=\"wrap\">盒子</div>\r\n=>编译为：\r\nReact.createElement(\r\n    'div',\r\n    { className: 'wrap' }\r\n) */\r\n// JSX类型不能是一个表达式：\r\nconst PhotoStory = <div>photo</div>\r\nconst VideoStory = <div>video</div>\r\nconst components = {\r\n    photo: PhotoStory,\r\n    video: VideoStory,\r\n}\r\nfunction Story(props) {\r\n    // 正确！JSX 类型可以是大写字母开头的变量。\r\n    const SepcificStory = components[props.storyTtpe]\r\n    return <SepcificStory story={props.story} />\r\n}\r\n\r\n// JavaScript 表达式作为 Props\r\n// if 语句以及 for 循环不是 JavaScript 表达式，所以不能在 JSX 中直接使用\r\n\r\n// 字符串字面量:\r\n// 将字符串字面量赋值给 prop 时，它的值是未转义的\r\n{/* <MyComponent message=\"&lt;3\" />\r\n// 等价 => \r\n<MyComponent message={'<3'} /> */}\r\n\r\n// Props 默认值为 “True”\r\n{/* <MyTextBox autocomplete />\r\n// =>\r\n<MyTextBox autocomplete={true} /> */}\r\n\r\n// 属性展开:\r\nconst Button = props => {\r\n    const { kind, ...other } = props;\r\n    const className = kind === \"primary\" ? \"PrimaryButton\" : \"SecondaryButton\";\r\n    return <button className={className} {...other} />;\r\n};\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Button kind=\"primary\" onClick={() => console.log(\"clicked!\")}>\r\n                Hello World!\r\n      </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\n/* \r\nJSX 会移除行首尾的空格以及空行。与标签相邻的空行均会被删除，\r\n文本字符串之间的新行会被压缩为一个空格\r\n */\r\n\r\n// 布尔类型、Null 以及 Undefined 将会忽略\r\n// 0仍然会被渲染\r\nexport default class ThoroughJSX extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    // React 组件也能够返回存储在数组中的一组元素：\r\n    render() {\r\n        // 不需要用额外的元素包裹列表元素！\r\n        return [\r\n            // 不要忘记设置 key :)\r\n            <li key=\"A\">First item</li>,\r\n            <li key=\"B\">Second item</li>,\r\n            <li key=\"C\">Third item</li>,\r\n        ];\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\e_Refs\\index.js",["203"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-28 22:35:44\r\n * @LastEditTime: 2021-03-01 16:46:44\r\n * @LastEditors: Please set LastEditors\r\n * @Description: ref转发\r\n * @FilePath: \\react-syntax2\\src\\views\\d_ErrorBorder\\index.js\r\n */\r\nimport React, { Component, useRef } from \"react\";\r\n/**\r\n * 类似于vue 的ref,访问子组件或者某个DOM元素\r\n * \r\n * Refs 提供了一种方式，允许我们访问 DOM 节点或在 render 方法中创建的 React 元素\r\n * \r\n * Ref 转发是一项将 ref 自动地通过组件传递到其一子组件的技巧\r\n */\r\n\r\n// 1. 创建refs: React.createRef()\r\n/* \r\n * 注：\r\n * a.当 ref 属性用于 HTML 元素时，构造函数中使用 React.createRef() 创建的 ref 接收底层 DOM 元素作为其 current 属性。\r\n * b.当 ref 属性用于自定义 class 组件时，ref 对象接收组件的挂载实例作为其 current 属性。\r\n * c.你不能在函数组件上使用 ref 属性，因为他们没有实例;但只要它指向一个 DOM 元素或 class 组件时就可以使用。\r\n */\r\n/* class MyComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n    }\r\n    render() {\r\n        // 访问refs\r\n        console.log(this.myRef.current)\r\n        return (<div ref={this.myRef}></div>)\r\n    }\r\n}\r\n */\r\n/* \r\nReact 会在组件挂载时给 current 属性传入 DOM 元素，并在组件卸载时传入 null 值。\r\nref 会在 componentDidMount 或 componentDidUpdate 生命周期钩子触发前更新。\r\n*/\r\n// class CustomTextInput extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         // 创建一个ref 来存储textInput的 DOM元素\r\n//         // this.textInput = React.createRef()\r\n//         console.log(props)\r\n//         this.focusInput = this.focusInput.bind(this)\r\n//     }\r\n\r\n//     focusInput() {\r\n//         // 直接使用原生 API 使 text 输入框获得焦点\r\n//         // 注意：我们通过 \"current\" 来访问 DOM 节点\r\n//         // 类似于vue中，$refs[xxx]，访问ref元素的方式\r\n//         console.log(this.textInput)\r\n//         this.textInput.current.focus()\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {/* 类似 vue 中，在子组件上或者DOM元素添加 ref */}\r\n//                 <input type=\"text\" ref={this.textInput} />\r\n//                 <input type=\"button\" value=\"获得焦点\" onClick={this.focusInput} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// \r\n// function CustomTextInput(props) {\r\n//     const textInput = useRef()\r\n\r\n//     const handleClick = () => {\r\n//         textInput.current.focus()\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             {/* 类似 vue 中，在子组件上或者DOM元素添加 ref */}\r\n//             <input type=\"text\" ref={textInput} />\r\n//             <input type=\"button\" value=\"获得焦点\" onClick={handleClick} />\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n\r\n// 回调refs\r\n/* \r\n不同于传递 createRef() 创建的 ref 属性，你会传递一个函数。这个函数中接受 React 组件实例\r\n或 HTML DOM 元素作为参数，以使它们能在其他地方被存储和访问。 */\r\n// class CustomTextInput extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.textInput = null\r\n//         this.setTextRefInput = element => {\r\n//             this.textInput = element\r\n//         }\r\n\r\n//         // 使用原生DOM API使其获得焦点\r\n//         this.focusInput = () => {\r\n//             this.textInput && this.textInput.focus()\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.focusInput()\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <div>\r\n//                 <input type=\"text\" ref={this.setTextRefInput}/>\r\n//                 <input type=\"button\" value=\"获得焦点\" onClick={this.focusInput}/>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nfunction CustomTextInput(props) {\r\n    return (\r\n        <div>\r\n            <input type=\"text\" ref={props.inputRef}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/* \r\n第二个参数 ref 只在使用 React.forwardRef 定义组件时存在。\r\n常规函数和 class 组件不接收 ref 参数，且 props 中也不存在 ref。\r\n*/\r\n\r\nconst FancyButton = React.forwardRef((props, ref) => {\r\n    return <button className=\"FancyButton\" ref={ref}>{props.children}</button>\r\n})\r\n\r\nconst _ref = React.createRef()\r\n\r\nexport default class RefsCon extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.inputElement = null\r\n    }\r\n    componentDidMount(){\r\n        this.inputElement.focus()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <CustomTextInput /> */}\r\n                <CustomTextInput inputRef={el => this.inputElement = el}/>\r\n                <FancyButton ref={_ref}>点我</FancyButton> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n    \r\n/* \r\n在上面的例子中，RefsCont 把它的 refs 回调函数当作 inputRef props 传递给了 \r\nCustomTextInput，而且 CustomTextInput 把相同的函数作为特殊的 ref 属性传递给了 <input>。\r\n结果是，在 RefsCont 中的 this.inputElement 会被设置为与 CustomTextInput 中\r\n的 input 元素相对应的 DOM 节点。\r\n*/","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\m_RenderProps\\index.js",["204","205","206"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-02 21:30:41\r\n * @LastEditTime: 2021-02-06 09:54:54\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\guideManage\\m_RenderProps\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n/* \r\n  Render Props \r\n  术语 “render prop” 是指一种在 React 组件之间使用一个值为函数的 prop 共享代码的简单技术\r\n */\r\n\r\nclass Cat extends React.Component {\r\n    render() {\r\n        const mouse = this.props.mouse;\r\n        return (\r\n            <img src=\"../../../assets/image/cat.jpg\" style={{ position: 'absolute', left: mouse.x, top: mouse.y }} />\r\n        );\r\n    }\r\n}\r\n\r\nclass Mouse extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.state = { x: 0, y: 0 };\r\n    }\r\n\r\n    handleMouseMove(event) {\r\n        this.setState({\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100vh' }} onMouseMove={this.handleMouseMove}>\r\n                {/*我们可以在这里换掉 <p> 的 <Cat>   ......\r\n          但是接着我们需要创建一个单独的 <MouseWithSomethingElse>\r\n          每次我们需要使用它时，<Mouse> 是不是真的可以重复使用.*/}\r\n                {\r\n                    this.props.render(this.state)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MouseTracker extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>移动鼠标!</h1>\r\n                <Mouse render={mouse => (\r\n                    <Cat mouse={mouse} />\r\n                )} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default class RenderProps extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <MouseTracker />\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\n_NotContralCom\\index.js",["207","208"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-02 21:30:41\r\n * @LastEditTime: 2021-02-04 21:43:43\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\guideManage\\NotContralCom\\index.js\r\n */\r\nimport React, { Component, Fragment } from \"react\";\r\n/* \r\n  非受控组件\r\n */\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.input = React.createRef()\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n    // props默认值，类似于vue中的props\r\n    static defaultProps = {\r\n        name: '李四'\r\n    }\r\n    handleSubmit(e) {\r\n        this.setState({\r\n            value: this.input.current.value\r\n        })\r\n        setTimeout(() => {\r\n            alert(this.props.name + this.state.value)\r\n        }, 0);\r\n        e.preventDefault()\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" defaultValue=\"Bob\" ref={this.input} />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass FileInput extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.fileInput = React.createRef()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        console.log(this.fileInput.current.files)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                {/* \r\n                在 React 中，<input type=\"file\" /> 始终是一个非受控组件，\r\n                因为它的值只能由用户设置，而不能通过代码控制。\r\n                */}\r\n                <input type=\"file\" ref={this.fileInput} />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class NotContralCom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NameForm name=\"张大仙\" />\r\n                <FileInput />\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\d_HookApi\\index.js",["209","210","211","212"],"/*\r\n * @Author: your name\r\n * @Date: 2021-03-01 17:29:27\r\n * @LastEditTime: 2021-03-02 16:28:13\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\hookIntroduction\\d_HookApi\\index.js\r\n */\r\nimport react, {\r\n  Component,\r\n  useEffect,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n// https://zh-hans.reactjs.org/docs/hooks-reference.html#usecontext\r\n\r\n// 1.useState\r\n/* \r\n与 class 组件中的 setState 方法不同，useState 不会自动合并更新对象。\r\n你可以用函数式的 setState 结合展开运算符来达到合并更新对象的效果。\r\n*/\r\nfunction Counter1({ initialCount }) {\r\n  const [count, setCount] = useState(initialCount);\r\n  /* const [state, setState] = useState(() => {\r\n    const initialState = someExpensiveComputation(props);\r\n    return initialState;\r\n  }); */\r\n\r\n  // 第二个参数，它是 effect 所依赖的值数组\r\n  // 如果想执行只运行一次的 effect（仅在组件挂载和卸载时执行），可以传递一个空数组（[]）作为第二个参数\r\n  // componentDidMount\r\n  useEffect(() => {\r\n    console.log(count);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      Count: {count}\r\n      <button onClick={() => setCount(initialCount)}>Reset</button>\r\n      <button onClick={() => setCount((prevCount) => prevCount - 1)}>-</button>\r\n      <button onClick={() => setCount((prevCount) => prevCount + 1)}>+</button>\r\n    </>\r\n  );\r\n}\r\n\r\n// 2.useReducer: useReducer是useState的一种变体 ，形如redux中的reducer: (state, action) => newState\r\n\r\nfunction init(initialCount) {\r\n  return { count: initialCount };\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return { count: state.count + 1 };\r\n    case \"decrement\":\r\n      return { count: state.count - 1 };\r\n    case \"reset\":\r\n      return init(action.payload);\r\n\r\n    default:\r\n      throw new Error();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction Counter2({ initialCount }) {\r\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\r\n  return (\r\n    <>\r\n      counter:{state.count}\r\n      <button\r\n        onClick={() => dispatch({ type: \"reset\", payload: initialCount })}\r\n      >\r\n        Reset\r\n      </button>\r\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\r\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\r\n    </>\r\n  );\r\n}\r\n\r\n// 3.useCallback  返回一个memoization函数\r\n// function doSomething(a, b) {}\r\n// const memoizedCallback = useCallback(() => {\r\n//   doSomething(a, b);\r\n// }, [a, b]);\r\n/* \r\n把内联回调函数及依赖项数组作为参数传入 useCallback，它将返回该回调函数的 memoized 版本，\r\n该回调函数仅在某个依赖项改变时才会更新\r\n */\r\n\r\n// 类似于vue中的computed\r\n\r\n// 4. useMemo  返回一个 memoized 值。仅会在某个依赖项改变时才重新计算 memoized 值。\r\n// function computeExpensiveValue(a, b) {}\r\n// const memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);\r\n/* 如果没有提供依赖项数组，useMemo 在每次渲染时都会计算新的值。 */\r\n\r\n// 5. useRef 返回一个可变的 ref 对象，其 .current 属性被初始化为传入的参数（initialValue）。返回的 ref 对象在组件的整个生命周期内保持不变。\r\nfunction TextInputWithFocusButton(params) {\r\n  const inputEl = useRef(null);\r\n  const onButtonClick = () => {\r\n    inputEl.current.focus();\r\n  };\r\n  return (\r\n    <>\r\n      <input type=\"text\" ref={inputEl} />\r\n      <button onClick={onButtonClick}>焦点</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default class HookApi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        useState：\r\n        <Counter1 initialCount={0} />\r\n        <br />\r\n        useReducer：\r\n        <Counter2 initialCount={0} />\r\n        <br />\r\n        <TextInputWithFocusButton />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\a_Introduce\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\b_useStateHook\\index.js",["213","214","215","216"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-08 14:17:51\r\n * @LastEditTime: 2021-02-08 14:50:21\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\hookIntroduction\\b_useStateHook\\index.js\r\n */\r\n\r\nimport { Component, useState } from \"react\";\r\n// https://zh-hans.reactjs.org/docs/hooks-state.html\r\n\r\n/* function Example(props) {\r\n  const [count, setCount] = useState(0);\r\n  return (\r\n    <div>\r\n      <span>点击了{count}次</span>\r\n      <button onClick={() => setCount(count + 1)}>点点</button>\r\n    </div>\r\n  );\r\n} */\r\n// => 等价\r\nclass Example extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>点击了{this.state.count}次</span>\r\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\r\n          点点\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 使用多个state变量\r\nfunction ExampleWithManyStates() {\r\n  // 声明多个 state 变量\r\n  const [age, setAge] = useState(42);\r\n  const [fruit, setFruit] = useState(\"banana\");\r\n  const [todos, setTodos] = useState([{ text: \"学习 Hook\" }]);\r\n\r\n  function handleOrangeClick() {\r\n    // 和 this.setState({ fruit: 'orange' }) 类似\r\n    setFruit(\"orange\");\r\n  }\r\n\r\n  return <span onClick={handleOrangeClick}>{fruit}</span>\r\n}\r\n\r\nexport default class UseStateHook extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Example />\r\n        <ExampleWithManyStates />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\study-proj\\react-syntax2\\src\\views\\hookIntroduction\\c_useEffectHook\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\redux\\a_TodoList\\index.js",["217"],"/*\r\n * @Author: your name\r\n * @Date: 2021-03-01 21:35:00\r\n * @LastEditTime: 2021-03-03 11:35:14\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\redux\\a_actionReducer.js\r\n */\r\n\r\n// 容器组件 做逻辑操作的\r\n\r\nimport React, { Component, createRef } from \"react\";\r\nimport TodoListUI from \"./TodoListUI\";\r\nimport store from \"@/store\";\r\nimport {\r\n  getInputChange,\r\n  getAddChange,\r\n  getDeleteChange,\r\n  getInitList,\r\n} from \"@/store/actionCreator\";\r\n\r\nexport default class ActionReducer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = store.getState();\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleAddItem = this.handleAddItem.bind(this);\r\n\r\n    // 订阅store的改变，\r\n    this.handleStoreChange = this.handleStoreChange.bind(this);\r\n    store.subscribe(this.handleStoreChange);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TodoListUI\r\n        handleChangeInput={this.handleChangeInput}\r\n        handleAddItem={this.handleAddItem}\r\n        handleDeleteItem={this.handleDeleteItem}\r\n        list={this.state.list}\r\n        inputVal={this.state.inputVal}\r\n      />\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    // redux-thunk\r\n    /* // 使用了redux-thunk 中间件，使得 action可以处理并返回一个异步函数\r\n        const action = getTodoList()\r\n        // 这里action自动会处理，将dispatch作为参数传递\r\n        store.dispatch(action) */\r\n\r\n    // axios\r\n    //   .get(\"https://api.apiopen.top/getJoke?page=1&count=2&type=video\")\r\n    //   .then((res) => {\r\n    //     console.log(res.data);\r\n    //     const { result } = res.data;\r\n    //     const data = result.map((item) => item.name);\r\n    //     const action = initToList(data);\r\n    //     store.dispatch(action);\r\n    //   });\r\n\r\n    const action = getInitList();\r\n    store.dispatch(action);\r\n  }\r\n  handleChangeInput(e) {\r\n    const action = getInputChange(e.target.value);\r\n    // 派发事件\r\n    store.dispatch(action);\r\n  }\r\n  handleAddItem(e) {\r\n    const action = getAddChange();\r\n    store.dispatch(action);\r\n  }\r\n\r\n  handleDeleteItem(index, e) {\r\n    console.log(e);\r\n    const action = getDeleteChange(index);\r\n    store.dispatch(action);\r\n  }\r\n\r\n  // 拿到store新的状态，并改变state，渲染到页面\r\n  handleStoreChange() {\r\n    this.setState(store.getState());\r\n  }\r\n\r\n  /*     <button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\r\n        <button onClick={this.deleteRow.bind(this, id)}>Delete Row</button>\r\n    上述两种方式是等价的，分别通过箭头函数和 Function.prototype.bind 来实现。\r\n    \r\n     在这两种情况下，React 的事件对象 e 会被作为第二个参数传递。如果通过箭头函数的方式，事件对象必须显式的进行传递，而通过 bind 的方式，事件对象以及更多的参数将会被隐式的进行传递*/\r\n}\r\n","D:\\study-proj\\react-syntax2\\src\\views\\guideManage\\b_CodeSplit\\OtherComponent.js",[],"D:\\study-proj\\react-syntax2\\src\\utils\\captureError.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\redux\\a_TodoList\\TodoListUI.js",["218","219"],"/*\r\n * @Author: your name\r\n * @Date: 2021-03-02 20:58:21\r\n * @LastEditTime: 2021-03-02 21:31:26\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\views\\redux\\a_actionReducer\\TodoListUI.js\r\n */\r\n\r\nimport { Component, createRef, Fragment } from \"react\";\r\n\r\n// UI组件：只展示页面渲染的内容，不做逻辑处理\r\n/* \r\n无状态组件：当一个组件中只有render时；可以用函数组件来替换class类组件，\r\n这样性能会更好，因为class类组件中还有生命周期会执行\r\n*/\r\nconst TodoListUI = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <input type=\"text\" value={props.inputVal} onChange={props.handleChangeInput} />\r\n            <button onClick={props.handleAddItem}>提交</button>\r\n            <ul>\r\n                {\r\n                    props.list.map((item, index) => <li key={item + index}>{item} <span onClick={(e) => { props.handleDeleteItem(index, e) }}>删除</span></li>)\r\n                }\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default TodoListUI\r\n/* class TodoListUI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.input = createRef()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <input type=\"text\" ref={this.input} value={this.props.inputVal} onChange={this.props.handleChangeInput} />\r\n                <button onClick={this.props.handleAddItem}>提交</button>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((item, index) => <li key={item + index}>{item} <span onClick={(e) => { this.props.handleDeleteItem(index, e) }}>删除</span></li>)\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n} */\r\n","D:\\study-proj\\react-syntax2\\src\\store\\actionCreator.js",[],"D:\\study-proj\\react-syntax2\\src\\store\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\store\\actionTypes.js",[],"D:\\study-proj\\react-syntax2\\src\\store\\reduce.js",["220"],"/*\r\n * @Author: your name\r\n * @Date: 2021-02-28 19:14:20\r\n * @LastEditTime: 2021-03-03 11:05:15\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\react-syntax2\\src\\store\\reduce.js\r\n */\r\nimport * as TYPES from \"./actionTypes\"\r\n\r\nconst defaultState = {\r\n    inputVal: \"haha\",\r\n    list: [1, 2]\r\n}\r\n// reducer 可以接受state,但绝不能修改state\r\n// reducer必须是一个纯函数,给定固定的输入就必须有是固定的输出， 且不能有任何副作用\r\n\r\nexport default (state = defaultState, action) => {\r\n    if (action.type === TYPES.CHNAGE_INPUT_VALUE) {\r\n        const newState = JSON.parse(JSON.stringify(state))\r\n        newState.inputVal = action.value\r\n        return newState\r\n    }\r\n    if (action.type === TYPES.INIT_TODO_LIST) {\r\n        const newState = JSON.parse(JSON.stringify(state))\r\n        newState.list = action.data\r\n        return newState\r\n    }\r\n\r\n    if (action.type === TYPES.ADD_ITEM) {\r\n        const newState = JSON.parse(JSON.stringify(state))\r\n        newState.list.push(newState.inputVal)\r\n        newState.inputVal = \"\"\r\n        return newState\r\n    }\r\n\r\n    if (action.type === TYPES.DELETE_ITEM) {\r\n        const newState = JSON.parse(JSON.stringify(state))\r\n        newState.list.splice(action.index, 1)\r\n        return newState\r\n    }\r\n    return state\r\n}","D:\\study-proj\\react-syntax2\\src\\store\\sagas.js",[],"D:\\study-proj\\react-syntax2\\src\\views\\reactRedux\\a_NewTodoList\\index.js",["221"],"D:\\study-proj\\react-syntax2\\src\\react-redux-store\\index.js",[],"D:\\study-proj\\react-syntax2\\src\\react-redux-store\\reducer.js",["222"],"D:\\study-proj\\react-syntax2\\src\\react-redux-store\\actionTypes.js",[],["223","224"],"D:\\study-proj\\react-syntax2\\src\\react-redux-store\\actionCreator.js",[],"D:\\study-proj\\react-syntax2\\src\\react-redux-store\\sagas.js",[],{"ruleId":"225","severity":1,"message":"226","line":13,"column":5,"nodeType":"227","messageId":"228","endLine":15,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":49,"column":31,"nodeType":"231","messageId":"232","endLine":49,"endColumn":33},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":49,"column":1,"nodeType":"239","messageId":"240","endLine":50,"endColumn":53},{"ruleId":"241","severity":1,"message":"242","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":12,"column":5,"nodeType":"227","messageId":"228","endLine":14,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":14,"column":5,"nodeType":"227","messageId":"228","endLine":16,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":12,"column":5,"nodeType":"227","messageId":"228","endLine":14,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":14,"column":5,"nodeType":"227","messageId":"228","endLine":16,"endColumn":6},{"ruleId":"225","severity":1,"message":"226","line":28,"column":5,"nodeType":"227","messageId":"228","endLine":28,"endColumn":40},{"ruleId":"241","severity":1,"message":"246","line":92,"column":7,"nodeType":"243","messageId":"244","endLine":92,"endColumn":14},{"ruleId":"241","severity":1,"message":"247","line":95,"column":13,"nodeType":"243","messageId":"244","endLine":95,"endColumn":18},{"ruleId":"241","severity":1,"message":"247","line":99,"column":13,"nodeType":"243","messageId":"244","endLine":99,"endColumn":18},{"ruleId":"241","severity":1,"message":"247","line":102,"column":13,"nodeType":"243","messageId":"244","endLine":102,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":13,"column":5,"nodeType":"227","messageId":"228","endLine":15,"endColumn":6},{"ruleId":"225","severity":1,"message":"226","line":44,"column":5,"nodeType":"227","messageId":"228","endLine":46,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":10,"column":8,"nodeType":"243","messageId":"244","endLine":10,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":10,"column":28,"nodeType":"243","messageId":"244","endLine":10,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":17,"column":5,"nodeType":"227","messageId":"228","endLine":19,"endColumn":6},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"241","severity":1,"message":"248","line":26,"column":10,"nodeType":"243","messageId":"244","endLine":26,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":37,"column":1,"nodeType":"239","messageId":"240","endLine":39,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":42,"column":1,"nodeType":"239","messageId":"240","endLine":44,"endColumn":38},{"ruleId":"241","severity":1,"message":"249","line":53,"column":7,"nodeType":"243","messageId":"244","endLine":53,"endColumn":10},{"ruleId":"225","severity":1,"message":"226","line":71,"column":5,"nodeType":"227","messageId":"228","endLine":73,"endColumn":6},{"ruleId":"241","severity":1,"message":"250","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":34},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"251","severity":1,"message":"252","line":19,"column":13,"nodeType":"253","endLine":19,"endColumn":118},{"ruleId":"225","severity":1,"message":"226","line":65,"column":5,"nodeType":"227","messageId":"228","endLine":67,"endColumn":6},{"ruleId":"241","severity":1,"message":"245","line":9,"column":28,"nodeType":"243","messageId":"244","endLine":9,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":72,"column":5,"nodeType":"227","messageId":"228","endLine":74,"endColumn":6},{"ruleId":"241","severity":1,"message":"254","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"255","severity":1,"message":"256","line":35,"column":6,"nodeType":"257","endLine":35,"endColumn":8,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":64,"column":7,"nodeType":"261","messageId":"262","endLine":64,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":116,"column":3,"nodeType":"227","messageId":"228","endLine":118,"endColumn":4},{"ruleId":"241","severity":1,"message":"263","line":46,"column":10,"nodeType":"243","messageId":"244","endLine":46,"endColumn":13},{"ruleId":"241","severity":1,"message":"264","line":46,"column":15,"nodeType":"243","messageId":"244","endLine":46,"endColumn":21},{"ruleId":"241","severity":1,"message":"265","line":48,"column":10,"nodeType":"243","messageId":"244","endLine":48,"endColumn":15},{"ruleId":"241","severity":1,"message":"266","line":48,"column":17,"nodeType":"243","messageId":"244","endLine":48,"endColumn":25},{"ruleId":"241","severity":1,"message":"267","line":12,"column":28,"nodeType":"243","messageId":"244","endLine":12,"endColumn":37},{"ruleId":"241","severity":1,"message":"268","line":10,"column":10,"nodeType":"243","messageId":"244","endLine":10,"endColumn":19},{"ruleId":"241","severity":1,"message":"267","line":10,"column":21,"nodeType":"243","messageId":"244","endLine":10,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":18,"column":1,"nodeType":"271","endLine":43,"endColumn":2},{"ruleId":"241","severity":1,"message":"268","line":9,"column":10,"nodeType":"243","messageId":"244","endLine":9,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":14,"column":1,"nodeType":"271","endLine":38,"endColumn":3},{"ruleId":"233","replacedBy":"272"},{"ruleId":"235","replacedBy":"273"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'MyClass' is defined but never used.","'value' is assigned a value but never used.","'Story' is defined but never used.","'App' is assigned a value but never used.","'useRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["276"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'todos' is assigned a value but never used.","'setTodos' is assigned a value but never used.","'createRef' is defined but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["274"],["275"],"no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},"Update the dependencies array to be: [count]",{"range":"279","text":"280"},[947,949],"[count]"]